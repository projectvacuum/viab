#!/bin/sh
#
# This is an idempotent script which is run after a new version of the 
# viab-conf RPM is installed. During testing, it can be run at any time 
# on a Vac-in-a-Box machine to apply changes to the configuration.
#

export VIAB_SITENAME=`cat /etc/viab/sitename`
export VIAB_SPACENAME=`cat /etc/viab/spacename`
export VIAB_VERSION=`cat /etc/viab/version`

# Append the ViaB version to a redhat-release file
echo `head -1 /etc/redhat-release` "(ViaB $VIAB_VERSION)" >/etc/redhat-release.vac

# Make sure hostname matches ViaB expectation (site DHCP might be different)
HOSTIP=`hostname -I | tr ' ' '\n'| egrep -v '^169\.|^127\.' | head -1`
if [ "$HOSTIP" ] ; then
 export HOSTNAME=`grep " $HOSTIP " /etc/viab/factories-network | cut -d' ' -f2`
 hostname $HOSTNAME
fi

# Install viab.repo for this factory
sed "s/##VIAB_FACTORYNAME##/`hostname`/g" /etc/viab/viab.repo > /etc/yum.repos.d/viab.repo

# Run viab-heartbeat now so ViaB knows about this update
/usr/sbin/viab-heartbeat

# 
systemctl enable yum-cron
systemctl restart yum-cron
sed -i 's/ = no/ = yes/' /etc/yum/yum-cron-hourly.conf 

# Set up hourly auto updates and heartbeats at a random minute; update viab-conf first in case of viab.repo changes
echo `shuf -i 0-59 -n 1`' * * * * root (yum -y update viab-conf kernel ; /usr/sbin/viab-heartbeat) >/var/log/viab-update.log 2>&1' > /etc/cron.d/viab-yum-autoupdate
#sed -i -e 's/^ENABLED=.*/ENABLED=true/' -e 's/^SENDEMAIL=.*/SENDEMAIL=false/' -e 's/^MAXWAITTIME=.*/MAXWAITTIME=0/' /etc/sysconfig/yum-autoupdate
sed -i -e '$a#proxy=http://127.0.0.1:3128/' -e '/^#*proxy=/d' /etc/yum.conf

# Make /etc/vac.d/factories.conf and settings.conf
/bin/echo -e '[settings]\nfactories = '`cut -d' ' -f2 /etc/viab/factories-network` > /etc/vac.d/factories.conf.tmp
if [ $? = 0 ] ; then
 mv /etc/vac.d/factories.conf.tmp /etc/vac.d/factories.conf
fi

echo '[settings]' > /etc/vac.d/settings.conf
echo 'singularity_user = vacsngly' >> /etc/vac.d/settings.conf
echo 'volume_group = vac_volume_group' >> /etc/vac.d/settings.conf
grep "^$HOSTNAME;" /etc/viab/factories-settings | sed 's/;/\n/g' | tail --lines=+2 >> /etc/vac.d/settings.conf
echo 'vacmon_hostport = vacmon.gridpp.ac.uk:8884' >> /etc/vac.d/settings.conf
echo 'version_logger = 24' >> /etc/vac.d/settings.conf

cvmfsproxies=`echo 'http://169.254.169.253:3128' \`cat /etc/viab/cvmfsproxies\` | sed 's/ /|/g'`
echo "user_data_option_cvmfs_proxy = $cvmfsproxies" >> /etc/vac.d/settings.conf

# Create PEM versions of encrypted p12 keys
/usr/sbin/viab-conf-p12

# Update root password in /etc/shadow if necessary
if [ -s /etc/viab/passwordhash ] ; then
  sed 's/.*/root:&/' /etc/viab/passwordhash | chpasswd --encrypted
fi

# But no ssh password logins and force IPv4
sed -i \
  -e 's/^PasswordAuthentication.*/PasswordAuthentication=no/' \
  -e 's/^#AddressFamily.*/AddressFamily inet/' \
  /etc/ssh/sshd_config
systemctl restart sshd 

# Make sure we're using the Vac singularity.conf
cp -f /etc/singularity/singularity.vac.conf /etc/singularity/singularity.conf

# Create /etc/hosts listing all factories and this factory's VMs
(
echo '127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4'
sed 's/[0-9a-f:]* \([a-z0-9.-]*\) \([0-9.]*\) \([A-Z0-9]*\)/\2 \1/' /etc/viab/factories-network
i=0
while [ $i -lt 100 ]
do
  ii=`printf '%02d' $i`
  echo 169.254.169.$i `hostname -s`-$ii `hostname | sed "s/^[a-z0-9-]*/&-$ii/"`
  i=`expr $i + 1`
done
) > /etc/hosts     

# Put our dnsmasq wrapper in place
if [ ! -L /usr/sbin/dnsmasq ] ; then
 mv -f /usr/sbin/dnsmasq /usr/sbin/dnsmasq-real
 ln -s /usr/sbin/dnsmasq-wrapper /usr/sbin/dnsmasq
fi

# Make /etc/dhcp/dhcpd.conf

echo 'option domain-name "'`dnsdomainname`'";' >/etc/dhcp/dhcpd.conf.tmp
echo 'option domain-name-servers 8.8.8.8, 8.8.4.4;' >>/etc/dhcp/dhcpd.conf.tmp

cat >>/etc/dhcp/dhcpd.conf.tmp <<EOF
default-lease-time 86400;
max-lease-time 86400;
use-host-decl-names on;
allow bootp;
allow booting;
not authoritative;
subnet 169.254.0.0 netmask 255.255.0.0 { option domain-name-servers 169.254.169.253; option routers 169.254.169.253; }
EOF

cp -f /etc/squid/squid.conf.template /etc/squid/squid.conf.tmp

# Set up iptables for the current configuration
/usr/sbin/viab-conf-iptables

# Host entries for other factories
cat /etc/viab/factories-network | (

while read mac factory ip iphex network netmask router nameserversList
do
  echo "host $factory { hardware ethernet $mac; filename \"pxelinux.0\"; fixed-address $ip; next-server $HOSTNAME; }" >>/etc/dhcp/dhcpd.conf.tmp

  if [ "$factory" = "$HOSTNAME" ] ; then
    echo $ip > /etc/viab/ip
  else 
# Disable peering until this is fixed: https://bugs.squid-cache.org/show_bug.cgi?id=4223
#    echo "cache_peer $ip sibling 3128 3130 default"	>>/etc/squid/squid.conf.tmp
    echo "#cache_peer $ip sibling 3128 3130 default"	>>/etc/squid/squid.conf.tmp
  fi
  
  echo "acl localnet src $ip/32"			>>/etc/squid/squid.conf.tmp  
done
)

hostprefix=`echo $HOSTNAME | cut -d. -f1`
hostsuffix=`echo $HOSTNAME | cut -d. -f2-`

# Host entries for VMs on this factory
for i in '' 1 2 3 4 5 6 7 8 9
do
  for j in 0 1 2 3 4 5 6 7 8 9
  do
    ijhex=`printf '%02x' $i$j`
    ijdec=`printf '%02d' $i$j`
    echo "host $hostprefix-$ijdec.$hostsuffix { hardware ethernet 56:4d:a9:fe:a9:$ijhex; fixed-address 169.254.169.$i$j; }" >>/etc/dhcp/dhcpd.conf.tmp 
  done
done

mv -f /etc/dhcp/dhcpd.conf.tmp /etc/dhcp/dhcpd.conf
systemctl enable dhcpd 
systemctl restart dhcpd

mv -f /etc/squid/squid.conf.tmp /etc/squid/squid.conf
systemctl enable squid 
systemctl restart squid 

# Make custom /var/lib/tftpboot/pxelinux.cfg/default

mkdir -p /var/lib/tftpboot/pxelinux.cfg

# Host entries for other factories
cat /etc/viab/factories-network | (

while read mac factory ip iphex network netmask router nameserversList
do
(

nameservers=`echo ",$nameserversList" | sed 's/,/ nameserver=/g'`

cat <<EOF
default install
ipappend 2
label install
  kernel vmlinuz
EOF

# Using our kickstart file means hosts installing from this host use its Squid cache
echo "  append inst.ks=http://viab.gridpp.ac.uk/ks/$VIAB_SITENAME/$VIAB_SPACENAME/ks-proxy-$HOSTNAME.cfg initrd=initrd.img inst.ksexec ip=$ip::$router:$netmask:$factory::none $nameservers text ipv6.disable=1"

) > /var/lib/tftpboot/pxelinux.cfg/$iphex
done

)

# Install daily wget cron to update vmlinuz and initrd.img and run it now
/bin/echo -e '#!/bin/bash\ncd /var/lib/tftpboot\nwget -nd --mirror http://www.mirrorservice.org/sites/mirror.centos.org/7/os/x86_64/isolinux/vmlinuz http://www.mirrorservice.org/sites/mirror.centos.org/7/os/x86_64/isolinux/initrd.img >/var/log/viab-wget-tftpboot.log 2>&1' > /etc/cron.daily/viab-wget-tftpboot
chmod +x /etc/cron.daily/viab-wget-tftpboot
/etc/cron.daily/viab-wget-tftpboot

# Make sure tftpd is not disabled
sed -i 's/^[[:space:]]*disable.*/disable = no/' /etc/xinetd.d/tftp
systemctl restart xinetd

# Puts CPU temperatures in /sys/devices/platform/coretemp.*/
modprobe --quiet coretemp

# Configure cvmfs
cat <<EOF >/etc/cvmfs/default.local
CVMFS_REPOSITORIES=grid.cern.ch,cernvm-prod.cern.ch
CVMFS_HTTP_PROXY=http://127.0.0.1:3128
EOF

echo '/cvmfs /etc/auto.cvmfs --timeout 0' >/etc/auto.master.d/cvmfs.autofs

# Softdrive is used by SKA/LOFAR
cat <<EOF >/etc/cvmfs/config.d/softdrive.nl.conf
CVMFS_SERVER_URL='http://cvmfs01.nikhef.nl/cvmfs/@fqrn@;http://cvmfs-egi.gridpp.rl.ac.uk:8000/cvmfs/@fqrn@'
CVMFS_PUBLIC_KEY=/etc/cvmfs/keys/softdrive.nl.pub
EOF

cat <<EOF >/etc/cvmfs/keys/softdrive.nl.pub
-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA481/kCXbrVtLuzcFZ2uO
EmiAKx28qXIkonPwr/gSmqQ8k1zQA7dKK5YZwZSbVwgYqvhvW6i3vKWLGVDj+elH
1u8uumPzzlAJHrS1XoR8rY4xUULjQBvV9HuJxE6OK4ZEZPvQmeGmjXd446c8J5cv
BQFtaonRnrxAbtO+Z0KtzsNOzBNFegu9z+lT7/fxV17Qh10w5IKQjm/v6jPdj1ME
CrG4QW2S9+Y+7YzbRP5QYaE4cl5cBI3Yb048ufgLJMfX3++uqwGM+rqNs/CzHvsW
dO6Jznr9EbzqbIrTsFeUThNmsGPObxOT3VmB0BTTjrZSYjgf8oEE4hdhgNQgh7vs
OwIDAQAB
-----END PUBLIC KEY-----
EOF

# Do we want to do this?
# cvmfs_config reload

# This isn't needed for changes to configuration, but sometimes
# other updates to the system (eg shared libraries) mean python
# needs to be reinitialised
#
# USE service STILL AS Vac PROVIDES IT FOR SL6 COMPATIBILITY
service vacd restart
