# Kickstart template for Vac-in-a-Box
lang en_GB.UTF-8
keyboard uk
timezone --utc Europe/London
rootpw --iscrypted ##VIAB_PASSWORD_HASH##
text
install
zerombr
network --bootproto dhcp
firewall --enable --ssh --http --port=995:udp --port=tftp:udp --port=67:udp --port=68:udp --port=3128:tcp --port=3130:udp --trust=virbr1
authconfig --enableshadow --passalgo=sha512 --enablefingerprint
skipx
url --url=http://www.mirrorservice.org/sites/ftp.scientificlinux.org/linux/scientific/6.6/x86_64/os/
selinux --disabled
bootloader --location=mbr --append="reboot=pci"

part /etc/viabkeys --onpart=sda1 --noformat
part /boot         --ondrive=sda --size 512 --asprimary
part /             --ondrive=sda --size 60000
part swap          --ondrive=sda --recommended

# for logical volumes
part pv.sda --ondrive=sda --size 1 --grow
volgroup vac_volume_group pv.sda

repo --name="SL6" --baseurl=http://www.mirrorservice.org/sites/ftp.scientificlinux.org/linux/scientific/6.6/x86_64/os/ --cost=100
repo --name="Epel-6" --baseurl=http://www.mirrorservice.org/sites/dl.fedoraproject.org/pub/epel/6/x86_64/ --cost=101
repo --name="EMIbase" --baseurl=http://emisoft.web.cern.ch/emisoft/dist/EMI/3/sl6/x86_64/base/
repo --name="EMIupdates" --baseurl=http://emisoft.web.cern.ch/emisoft/dist/EMI/3/sl6/x86_64/updates/
repo --name="lcg-ca" --baseurl=https://cern.ch/lcg-ca/distribution/current/
repo --name="Vac" --baseurl=http://repo.gridpp.ac.uk/vacproject/vac/0.18/RPMS/
repo --name="ViaB" --baseurl=http://viab.gridpp.ac.uk/repo/##VIAB_SITENAME##/##VIAB_SPACENAME##/##VIAB_VERSION##/
reboot

# @core and @base are installed automatically
#
# ViaB philosophy is to add dependencies in viab-conf RPM rather
# than list lots of packages here. This makes it easier to change
# things across machines of different install dates during the
# auto updates.
#
%packages
screen
joe
emacs
kernel-headers
viab-conf
%end

%pre
#!/bin/sh
# Clear partition tables and create possible viabkeys partitions
echo '/dev/sda1 : start=0, size=1, Id=83' | sfdisk /dev/sda
%end

%post --log=/root/post_install.log
exec 2>&1

rm -f /etc/yum.repos.d/sl*.repo /etc/yum.repos.d/epel*.repo
cat <<EOF > /etc/yum.repos.d/viab.repo
[SL6]
name=SL6
baseurl=http://www.mirrorservice.org/sites/ftp.scientificlinux.org/linux/scientific/6.6/x86_64/os/
gpgcheck=1
[SL6-security]
name=SL6-security
baseurl=http://www.mirrorservice.org/sites/ftp.scientificlinux.org/linux/scientific/6.6/x86_64/updates/security/
gpgcheck=1
[SL6-fastbugs]
name=SL6-fastbugs
baseurl=http://www.mirrorservice.org/sites/ftp.scientificlinux.org/linux/scientific/6.6/x86_64/updates/fastbugs/
gpgcheck=1
[Epel-6]
name=Epel-6
baseurl=http://www.mirrorservice.org/sites/dl.fedoraproject.org/pub/epel/6/x86_64/
gpgcheck=1
[LCG-trustanchors]
name=LCG-trustanchors
baseurl=http://cern.ch/lcg-ca/distribution/current/
gpgkey=http://cern.ch/lcg-ca/distribution/current/GPG-KEY-EUGridPMA-RPM-3
gpgcheck=1
enabled=1
[Vac]
name=Vac
baseurl=http://repo.gridpp.ac.uk/vacproject/vac/0.18/RPMS/
gpgcheck=0
[ViaB]
name=ViaB
baseurl=http://viab.gridpp.ac.uk/repo/##VIAB_SITENAME##/##VIAB_SPACENAME##/##VIAB_VERSION##/
gpgcheck=0
metadata_expire=5m
proxy=_none_
EOF

# If there is a second disk, we add it to the volume group
if [ -b /dev/sdb ] ; then
 pvcreate /dev/sdb
 vgextend vac_volume_group /dev/sdb
fi

# Set up the persistent /etc/viabkeys partition and directory
echo 'These /dev/sda1 and /etc/viabkeys filesystem ops are fail safe...'
echo '/dev/sda1 /etc/viabkeys ext4 defaults 1 2' >>/etc/fstab
mkdir -p /etc/viabkeys
mount /dev/sda1 /etc/viabkeys
mkfs -t ext4 /dev/sda1
mount /dev/sda1 /etc/viabkeys
touch /etc/viabkeys/viab-conf-passphrase
chown -R root.root /etc/viabkeys
chmod -R go-rwx /etc/viabkeys
/usr/sbin/viab-conf-p12

ssh-keygen -f /root/.ssh/id_rsa -t rsa -N ''

# Need to do these before the VMs start
echo 'NOZEROCONF=yes' >>/etc/sysconfig/network

# Do not rely on DHCP when we reboot iff IP was given
#
# This is for the first machine at a site, where the
# IP address etc were given manually during installation
for i in /etc/sysconfig/network-scripts/ifcfg-*
do
 grep '^IPADDR=' $i >/dev/null 2>/dev/null
 if [ $? = 0 ] ; then
  sed -i 's/BOOTPROTO="dhcp"/BOOTPROTO="static"/' $i
 fi
done

# Enable services
for service in sshd dhcpd squid ntpdate ntpd iptables smartd nfs vacd 
do
  chkconfig $service on
done

# Temporary until Vac RPM is updated like this
mv -f /etc/rc3.d/S98vacd /etc/rc3.d/S12vacd

# Get the boot parameters from grub
kernel=`grep '^[[:space:]]*kernel' /boot/grub/grub.conf | head -1 | sed 's,^[[:space:]]*kernel \([^ ]*\) .*,/boot\1,'`
echo "kernel = $kernel"
options=`grep '^[[:space:]]*kernel' /boot/grub/grub.conf | head -1 | sed 's/^[[:space:]]*kernel \([^ ]*\) //'`
echo "options = $options"
initrd=`grep '^[[:space:]]*initrd' /boot/grub/grub.conf | head -1 | sed 's,^[[:space:]]*initrd /,/boot/,'`
echo "initrd = $initrd"

# The next reboot will avoid going through the System BIOS or PXE BIOS
# This magic avoids a boot loop even if PXE is the default boot option
kexec --load $kernel --append="$options" --initrd=$initrd
sleep 2
kexec -e

%end
