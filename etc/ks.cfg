# Kickstart template for Vac-in-a-Box
lang en_GB.UTF-8
keyboard uk
timezone --utc Europe/London
rootpw --iscrypted ##VIAB_PASSWORD_HASH##
text
install
zerombr
network --bootproto dhcp
firewall --enable --port=995:udp --port=3128:tcp --port=3130:udp --trust=virbr1
authconfig --enableshadow --passalgo=sha512 --enablefingerprint
skipx
url --url=http://www.mirrorservice.org/sites/ftp.scientificlinux.org/linux/scientific/6.6/x86_64/os/
selinux --disabled
bootloader --location=mbr --append="reboot=pci biosdevname=0"

part /etc/viabkeys --onpart=sda1 --noformat
part /boot         --ondrive=sda --size 512 --asprimary
part /             --ondrive=sda --size 50000
part swap          --ondrive=sda --recommended

# for logical volumes
part pv.sda --ondrive=sda --size 1 --grow
volgroup vac_volume_group pv.sda

repo --name="SL6" --baseurl=http://www.mirrorservice.org/sites/ftp.scientificlinux.org/linux/scientific/6.6/x86_64/os/ --cost=100
repo --name="SL6-security" --baseurl=http://www.mirrorservice.org/sites/ftp.scientificlinux.org/linux/scientific/6.6/x86_64/updates/security/ --cost=100
repo --name="SL6-fastbugs" --baseurl=http://www.mirrorservice.org/sites/ftp.scientificlinux.org/linux/scientific/6.6/x86_64/updates/fastbugs/ --cost=100
repo --name="Epel-6" --baseurl=http://www.mirrorservice.org/sites/dl.fedoraproject.org/pub/epel/6/x86_64/ --cost=101
repo --name="lcg-ca" --baseurl=https://cern.ch/lcg-ca/distribution/current/
repo --name="Vac" --baseurl=https://viab.gridpp.ac.uk/vacproject/vac/##VAC_MAJOR_MINOR##/RPMS/
repo --name="ViaB" --baseurl=https://viab.gridpp.ac.uk/repo/##VIAB_SITENAME##/##VIAB_SPACENAME##/00/
repo --name="MJF" --baseurl=https://viab.gridpp.ac.uk/machinejobfeatures/mjf-scripts/00/RPMS/
repo --name="UMDbase" --baseurl=http://repository.egi.eu/sw/production/umd/3/sl6/x86_64/base/
repo --name="UMDupdates" --baseurl=http://repository.egi.eu/sw/production/umd/3/sl6/x86_64/updates/
reboot

# @core and @base are installed automatically
#
# ViaB philosophy is to add dependencies in viab-conf RPM rather
# than list lots of packages here. This makes it easier to change
# things across machines of different install dates during the
# auto updates.
#
%packages
screen
joe
emacs
kernel-headers
viab-conf
mjf-db12
%end

%pre
#!/bin/sh
# Clear partition tables and create possible viabkeys partition
echo '/dev/sda1 : start=0, size=1, Id=83' | sfdisk /dev/sda
echo 'These /dev/sda1 and /etc/viabkeys filesystem ops are fail safe...'
mkdir -p /tmp/viabkeys
mount /dev/sda1 /tmp/viabkeys
mkfs.ext4 /dev/sda1
umount /dev/sda1 

# If there is a second disk, we repartition it
if [ -b /dev/sdb ] ; then
 echo '/dev/sdb1 : start=0, Id=83' | sfdisk /dev/sdb
fi
%end

%post --log=/root/post_install.log
exec 2>&1
date

# REMOVE ME AFTER RELEASE!!! Use prerelease
#rpm -U http://repo.gridpp.ac.uk/machinejobfeatures/mjf-db12-00.18-1.noarch.rpm

# We have these from viab.repo in the viab-conf RPM
rm -f /etc/yum.repos.d/sl*.repo /etc/yum.repos.d/epel*.repo

# If there is a second disk, we add it to the volume group
if [ -b /dev/sdb ] ; then
 pvcreate /dev/sdb1
 vgextend vac_volume_group /dev/sdb1
fi

# Set up the persistent /etc/viabkeys partition and directory
echo 'These /dev/sda1 and /etc/viabkeys filesystem ops are fail safe...'
echo '/dev/sda1 /etc/viabkeys ext4 defaults 1 2' >>/etc/fstab
mkdir -p /etc/viabkeys
mount /dev/sda1 /etc/viabkeys
mkfs -t ext4 /dev/sda1
mount /dev/sda1 /etc/viabkeys
touch /etc/viabkeys/viab-conf-passphrase
chown -R root.root /etc/viabkeys
chmod -R go-rwx /etc/viabkeys
/usr/sbin/viab-conf-p12

# ssh key for root into VMs
ssh-keygen -f /root/.ssh/id_rsa -t rsa -N ''

# sshd server keys are stored in /etc/viabkeys
for i in rsa dsa 
do
 if [ ! -f /etc/viabkeys/ssh_host_${i}_key -o ! -f /etc/viabkeys/ssh_host_${i}_key.pub ] ; then
   /usr/bin/ssh-keygen -q -t $i -f /etc/viabkeys/ssh_host_${i}_key -C '' -N ''
 fi
 /bin/cp -pf /etc/viabkeys/ssh_host_${i}_key /etc/viabkeys/ssh_host_${i}_key.pub /etc/ssh/
 chmod ugo+r /etc/ssh/ssh_host_*key.pub
done

# Need to do these before the VMs start
echo 'NOZEROCONF=yes' >>/etc/sysconfig/network

# Do not rely on DHCP when we reboot iff IP was given
#
# This is for the first machine at a site, where the
# IP address etc were given manually during installation
for i in /etc/sysconfig/network-scripts/ifcfg-*
do
 grep '^IPADDR=' $i >/dev/null 2>/dev/null
 if [ $? = 0 ] ; then
  sed -i 's/BOOTPROTO="dhcp"/BOOTPROTO="static"/' $i
 fi
done

# Enable services
for service in sshd dhcpd squid ntpdate ntpd iptables smartd vacd viab-iptables
do
  chkconfig $service on
done

# Suppress emergency messages
sed -i 's/^\*\.emerg.*/#&/' /etc/rsyslog.conf

# Get the boot parameters from grub
kernel=`grep '^[[:space:]]*kernel' /boot/grub/grub.conf | head -1 | sed 's,^[[:space:]]*kernel \([^ ]*\) .*,/boot\1,'`
echo "kernel = $kernel"
options=`grep '^[[:space:]]*kernel' /boot/grub/grub.conf | head -1 | sed 's/^[[:space:]]*kernel \([^ ]*\) //'`
echo "options = $options"
initrd=`grep '^[[:space:]]*initrd' /boot/grub/grub.conf | head -1 | sed 's,^[[:space:]]*initrd /,/boot/,'`
echo "initrd = $initrd"

# The next reboot will avoid going through the System BIOS or PXE BIOS
# This magic avoids a boot loop even though PXE is the default boot option
kexec --load $kernel --append="$options" --initrd=$initrd
sleep 2
date
kexec -e

%end
