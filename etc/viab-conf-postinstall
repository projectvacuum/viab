#!/bin/sh
#
# This is an idempotent script which is run after a new version of the 
# viab-conf RPM is installed. During testing, it can be run at any time 
# on a Vac-in-a-Box machine to apply changes to the configuration.
#

export VIAB_SITENAME=`cat /etc/viab/sitename`
export VIAB_SPACENAME=`cat /etc/viab/spacename`
export VIAB_VERSION=`cat /etc/viab/version`

# Append the ViaB version to an issue file
echo `head -1 /etc/issue` "(ViaB $VIAB_VERSION)" >/etc/issue.vac

# Make sure hostname matches ViaB expectation (site DHCP might be different)
HOSTIP=`hostname -I | tr ' ' '\n'| egrep -v '^169\.|^127\.' | head -1`
if [ "$HOSTIP" ] ; then
 export HOSTNAME=`grep " $HOSTIP\$" /etc/viab/factories-network | cut -d' ' -f2`
 hostname $HOSTNAME
fi

# Run viab-heartbeat now so ViaB knows about this update
/usr/sbin/viab-heartbeat

# Set up hourly auto updates and heartbeats at a random minute; update viab-conf first in case of viab.repo changes
echo `shuf -i 0-59 -n 1`' * * * * root (yum -y update viab-conf ; /etc/cron.daily/yum-autoupdate ; /usr/sbin/viab-heartbeat) >/var/log/viab-yum-autoupdate.log 2>&1' > /etc/cron.d/viab-yum-autoupdate
sed -i -e 's/^ENABLED=.*/ENABLED=true/' -e 's/^SENDEMAIL=.*/SENDEMAIL=false/' -e 's/^MAXWAITTIME=.*/MAXWAITTIME=0/' /etc/sysconfig/yum-autoupdate
sed -i -e '$aproxy=http://127.0.0.1:3128/' -e '/^#*proxy=/d' /etc/yum.conf

# Make /etc/vac.d/factories.conf and settings.conf
/bin/echo -e '[settings]\nfactories = '`cut -d' ' -f2 /etc/viab/factories-network` > /etc/vac.d/factories.conf.tmp
if [ $? = 0 ] ; then
 mv /etc/vac.d/factories.conf.tmp /etc/vac.d/factories.conf
fi

echo '[settings]' > /etc/vac.d/settings.conf
grep "^$HOSTNAME;" /etc/viab/factories-settings | sed 's/;/\n/g' | tail --lines=+2 >> /etc/vac.d/settings.conf
echo 'vacmon_hostport = vacmon.gridpp.ac.uk:8884' >> /etc/vac.d/settings.conf
echo 'version_logger = 24' >> /etc/vac.d/settings.conf

# Create PEM versions of encrypted p12 keys
/usr/sbin/viab-conf-p12

# Create /etc/hosts listing all factories and this factory's VMs
(
echo '127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4'
sed 's/[0-9a-f:]* \([a-z0-9.-]*\) \([0-9.]*\)/\2 \1/' /etc/viab/factories-network 
i=0
while [ $i -lt 100 ]
do
  ii=`printf '%02d' $i`
  echo 169.254.169.$i `hostname -s`-$ii `hostname | sed "s/^[a-z0-9-]*/&-$ii/"`
  i=`expr $i + 1`
done
) > /etc/hosts     

# Put our dnsmasq wrapper in place
if [ ! -L /usr/sbin/dnsmasq ] ; then
 mv -f /usr/sbin/dnsmasq /usr/sbin/dnsmasq-real
 ln -s /usr/sbin/dnsmasq-wrapper /usr/sbin/dnsmasq
fi

# Make /etc/dhcp/dhcpd.conf and /etc/ethers

echo 'option domain-name "'`dnsdomainname`'";' >/etc/dhcp/dhcpd.conf.tmp
echo 'option domain-name-servers 8.8.8.8, 8.8.4.4;' >>/etc/dhcp/dhcpd.conf.tmp

cat >>/etc/dhcp/dhcpd.conf.tmp <<EOF
default-lease-time 86400;
max-lease-time 86400;
use-host-decl-names on;
allow bootp;
allow booting;
not authoritative;
subnet 169.254.0.0 netmask 255.255.0.0 { option domain-name-servers 169.254.169.253; option routers 169.254.169.253; }
EOF

rm -f /etc/ethers.tmp
touch /etc/ethers.tmp
cp -f /etc/squid/squid.conf.template /etc/squid/squid.conf.tmp

# First remove the existing ViaB ssh etc, catch-all REJECT iptables rules, and default ssh rule
/sbin/iptables-save | /bin/egrep -v 'ViaB [[:alnum:]]* access' | /sbin/iptables-restore
/sbin/iptables -D INPUT -j REJECT --reject-with icmp-host-prohibited
/sbin/iptables -D INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT

# Then any TFTP etc rules from old installs
/sbin/iptables -D INPUT -p udp -m state --state NEW -m udp --dport 67 -j ACCEPT 
/sbin/iptables -D INPUT -p udp -m state --state NEW -m udp --dport 68 -j ACCEPT 
/sbin/iptables -D INPUT -p udp -m state --state NEW -m udp --dport 69 -j ACCEPT 

# Now (re)add the current ssh iptables rules
cat /etc/viab/sshrules | (

while read ip netmask
do
 /sbin/iptables -t filter -A INPUT -s $ip/$netmask -p tcp -m state --state NEW -m tcp --dport 22 -m comment --comment "ViaB ssh access" -j ACCEPT
done

)

cat /etc/viab/subnets | (

while read subnet netmask router nameservers ntpservers
do
 echo "subnet $subnet netmask $netmask { option routers $router; option domain-name-servers $nameservers; option ntp-servers $ntpservers; }" >>/etc/dhcp/dhcpd.conf.tmp
 /sbin/iptables -A INPUT -s $subnet/$netmask -p udp -m state --state NEW -m udp --dport 67 -m comment --comment "ViaB boot access" -j ACCEPT 
 /sbin/iptables -A INPUT -s $subnet/$netmask -p udp -m state --state NEW -m udp --dport 68 -m comment --comment "ViaB boot access" -j ACCEPT 
 /sbin/iptables -A INPUT -s $subnet/$netmask -p udp -m state --state NEW -m udp --dport 69 -m comment --comment "ViaB boot access" -j ACCEPT 
done

)

# Re-add the catch-all reject rule
/sbin/iptables -A INPUT -j REJECT --reject-with icmp-host-prohibited

# Host entries for other factories
cat /etc/viab/factories-network | (

while read mac factory ip
do
  echo "host $factory { hardware ethernet $mac; filename \"pxelinux.0\"; fixed-address $ip; next-server $HOSTNAME; }" >>/etc/dhcp/dhcpd.conf.tmp

  if [ "$factory" != "$HOSTNAME" ] ; then
    echo "$mac $ip" >>/etc/ethers.tmp
    echo "cache_peer $ip sibling 3128 3130 default"	>>/etc/squid/squid.conf.tmp
  fi
  
  echo "acl localnet src $ip/32"			>>/etc/squid/squid.conf.tmp  
done
)

hostprefix=`echo $HOSTNAME | cut -d. -f1`
hostsuffix=`echo $HOSTNAME | cut -d. -f2-`

# Host entries for VMs on this factory
for i in '' 1 2 3 4 5 6 7 8 9
do
  for j in 0 1 2 3 4 5 6 7 8 9
  do
    ijhex=`printf '%02x' $i$j`
    ijdec=`printf '%02d' $i$j`
    echo "host $hostprefix-$ijdec.$hostsuffix { hardware ethernet 56:4d:a9:fe:a9:$ijhex; fixed-address 169.254.169.$i$j; }" >>/etc/dhcp/dhcpd.conf.tmp 
  done
done

mv -f /etc/dhcp/dhcpd.conf.tmp /etc/dhcp/dhcpd.conf
chkconfig dhcpd on 
service dhcpd force-reload

mv -f /etc/ethers.tmp /etc/ethers
arp -f /etc/ethers

mv -f /etc/squid/squid.conf.tmp /etc/squid/squid.conf
chkconfig squid on
service squid reload

# Make custom /var/lib/tftpboot/pxelinux.cfg/default

mkdir -p /var/lib/tftpboot/pxelinux.cfg

(

cat <<EOF
default install
ipappend 2
label install
  kernel vmlinuz
EOF

# Using our kickstart file means hosts installing from this host use its Squid cache
echo "  append ks=http://viab.gridpp.ac.uk/ks/$VIAB_SITENAME/$VIAB_SPACENAME/ks-$HOSTNAME.cfg ksdevice=bootif initrd=initrd.img text"
    
) > /var/lib/tftpboot/pxelinux.cfg/default.tmp

mv -f /var/lib/tftpboot/pxelinux.cfg/default.tmp /var/lib/tftpboot/pxelinux.cfg/default

# Make sure tftpd is not disabled

sed -i 's/^[[:space:]]*disable.*/disable = no/' /etc/xinetd.d/tftp
service xinetd reload

